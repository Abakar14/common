plugins {
	id 'java-library'
	id 'org.springframework.boot' version '3.3.2' apply false
	id 'io.spring.dependency-management' version '1.1.6'
	id 'maven-publish'
}

group = 'com.bytmasoft'
version = '1.3.2'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = 'dss-common'
			version = '1.3.2'
			from components.java
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			pom {
				name = 'Dss Common'
				description = 'Dss Common use for all dss applicaton'
				url = 'http://localhost/library'
				developers {
					developer {
						id = 'Abakar'
						name = 'Abakar Mahamat'
						email = 'abakar61@web.de'
					}
				}
				scm {

					connection = 'scm:git@github.com:Abakar14/dss-common.git'
					developerConnection = 'scm:git@github.com:Abakar14/dss-common.git'
					url = 'https://github.com/Abakar14/dss-common/'
				}
			}
		}
	}
	repositories {
		maven {
			// change URLs to point to your repos, e.g. http://my.org/repo
			def releasesRepoUrl = layout.buildDirectory.dir('/home/abakar/.m2/repository')
			url = releasesRepoUrl
		}
	}
}
repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}
dependencies {
	api 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
